#!/usr/bin/env python
import os
from functools import wraps

import fire
import pandas as pd
from tqdm import tqdm

from double_jig_gen.features import get_score_features
from double_jig_gen.io import multi_abc_file_to_music21_scores


def list_of_dicts_to_csv_str(func):
    @wraps(func)
    def wrapper(*args, **kwargs):
        list_of_dicts = func(*args, **kwargs)
        return pd.DataFrame(list_of_dicts).convert_dtypes().to_csv(index=False)

    return wrapper


def read_scores_and_extract_features(
    filepath: os.path,
    tune_sep: str = "\n\n",
    error_handling: str = "warn",
    n_jobs: int = -1,
    no_progress_bar: bool = False,
):
    scores = multi_abc_file_to_music21_scores(
        filepath=filepath,
        tune_sep=tune_sep,
        error_handling=error_handling,
        n_jobs=n_jobs,
        no_progress_bar=no_progress_bar,
    )
    return [
        get_score_features(score)
        if score is not None
        else {"error": "error reading score"}
        for score in tqdm(scores, desc="Extracting features", disable=no_progress_bar)
    ]


if __name__ == "__main__":
    fire.Fire(list_of_dicts_to_csv_str(read_scores_and_extract_features))
